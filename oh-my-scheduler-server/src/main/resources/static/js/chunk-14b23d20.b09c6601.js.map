{"version":3,"sources":["webpack:///./node_modules/core-js/internals/create-property.js","webpack:///./node_modules/core-js/modules/es.array.splice.js","webpack:///./src/components/dag/WorkflowEditor.vue?4f66","webpack:///./node_modules/core-js/modules/es.array.find-index.js","webpack:///./src/components/dag/WorkflowEditor.vue?b5aa","webpack:///src/components/dag/WorkflowEditor.vue","webpack:///./src/components/dag/WorkflowEditor.vue?2f37","webpack:///./src/components/dag/WorkflowEditor.vue?c368"],"names":["toPrimitive","definePropertyModule","createPropertyDescriptor","module","exports","object","key","value","propertyKey","f","$","toAbsoluteIndex","toInteger","toLength","toObject","arraySpeciesCreate","createProperty","arrayMethodHasSpeciesSupport","arrayMethodUsesToLength","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","ACCESSORS","0","1","max","Math","min","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_LENGTH_EXCEEDED","target","proto","forced","splice","start","deleteCount","insertCount","actualDeleteCount","A","k","from","to","O","this","len","length","actualStart","argumentsLength","arguments","TypeError","$findIndex","findIndex","addToUnscopables","FIND_INDEX","SKIPS_HOLES","Array","callbackfn","undefined","_vm","_h","$createElement","_c","_self","staticStyle","attrs","on","back","_v","saveWorkflow","ref","workflowInfo","model","callback","$$v","$set","expression","_l","item","label","user","id","username","onClickImportNode","onClickRemoveNode","onClickAddFrom","onClickAddTo","onClickRemoveEdge","importDrawerVisible","$event","staticClass","jobQueryContent","listJobInfos","onClickReset","jobInfoPageResult","data","scopedSlots","_u","fn","scope","importNode","row","totalItems","pageSize","onClickChangePage","staticRenderFns","component"],"mappings":"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","file":"js/chunk-14b23d20.b09c6601.js","sourcesContent":["'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('splice', { ACCESSORS: true, 0: 0, 1: 2 });\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WorkflowEditor.vue?vue&type=style&index=0&id=34dc2e86&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WorkflowEditor.vue?vue&type=style&index=0&id=34dc2e86&scoped=true&lang=css&\"","'use strict';\nvar $ = require('../internals/export');\nvar $findIndex = require('../internals/array-iteration').findIndex;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar FIND_INDEX = 'findIndex';\nvar SKIPS_HOLES = true;\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength(FIND_INDEX);\n\n// Shouldn't skip holes\nif (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.findIndex` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND_INDEX);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-row',{staticStyle:{\"margin\":\"20px\"}},[_c('el-col',{attrs:{\"span\":1}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.back}},[_vm._v(\"返回\")])],1),_c('el-col',{attrs:{\"span\":1,\"offset\":22}},[_c('el-button',{attrs:{\"type\":\"success\"},on:{\"click\":_vm.saveWorkflow}},[_vm._v(\"保存\")])],1)],1),_c('el-row',[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.workflowInfo}},[_c('el-form-item',{attrs:{\"label\":\"工作流名称\"}},[_c('el-input',{model:{value:(_vm.workflowInfo.wfName),callback:function ($$v) {_vm.$set(_vm.workflowInfo, \"wfName\", $$v)},expression:\"workflowInfo.wfName\"}})],1),_c('el-form-item',{attrs:{\"label\":\"工作流描述\"}},[_c('el-input',{model:{value:(_vm.workflowInfo.wfDescription),callback:function ($$v) {_vm.$set(_vm.workflowInfo, \"wfDescription\", $$v)},expression:\"workflowInfo.wfDescription\"}})],1),_c('el-form-item',{attrs:{\"label\":\"定时信息\"}},[_c('el-row',[_c('el-col',{attrs:{\"span\":6}},[_c('el-select',{attrs:{\"placeholder\":\"时间表达式类型\"},model:{value:(_vm.workflowInfo.timeExpressionType),callback:function ($$v) {_vm.$set(_vm.workflowInfo, \"timeExpressionType\", $$v)},expression:\"workflowInfo.timeExpressionType\"}},_vm._l((_vm.timeExpressionTypeOptions),function(item){return _c('el-option',{key:item.key,attrs:{\"label\":item.label,\"value\":item.key}})}),1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-input',{attrs:{\"placeholder\":\"CRON填写CRON表达式，API无需填写\"},model:{value:(_vm.workflowInfo.timeExpression),callback:function ($$v) {_vm.$set(_vm.workflowInfo, \"timeExpression\", $$v)},expression:\"workflowInfo.timeExpression\"}})],1)],1)],1),_c('el-form-item',{attrs:{\"label\":\"最大实例\"}},[_c('el-input-number',{model:{value:(_vm.workflowInfo.maxWfInstanceNum),callback:function ($$v) {_vm.$set(_vm.workflowInfo, \"maxWfInstanceNum\", $$v)},expression:\"workflowInfo.maxWfInstanceNum\"}})],1),_c('el-form-item',{attrs:{\"label\":\"报警配置\"}},[_c('el-select',{attrs:{\"multiple\":\"\",\"filterable\":\"\",\"placeholder\":\"选择报警通知人员\"},model:{value:(_vm.workflowInfo.notifyUserIds),callback:function ($$v) {_vm.$set(_vm.workflowInfo, \"notifyUserIds\", $$v)},expression:\"workflowInfo.notifyUserIds\"}},_vm._l((_vm.userList),function(user){return _c('el-option',{key:user.id,attrs:{\"label\":user.username,\"value\":user.id}})}),1)],1)],1)],1),_c('el-row',[_c('el-row',[_c('el-button',{on:{\"click\":_vm.onClickImportNode}},[_vm._v(\"导入任务\")]),_c('el-button',{on:{\"click\":_vm.onClickRemoveNode}},[_vm._v(\"删除任务\")]),_c('el-button',{on:{\"click\":_vm.onClickAddFrom}},[_vm._v(\"新增起点\")]),_c('el-button',{on:{\"click\":_vm.onClickAddTo}},[_vm._v(\"新增终点\")]),_c('el-button',{on:{\"click\":_vm.onClickRemoveEdge}},[_vm._v(\"删除边\")])],1),_c('div',[_c('svg',{attrs:{\"width\":\"80%\",\"height\":\"1000px\",\"id\":\"svgCanvas\"}},[_c('g'),_c('rect')])])],1),_c('el-drawer',{attrs:{\"title\":\"请选择需要导入工作流的任务\",\"visible\":_vm.importDrawerVisible,\"direction\":\"rtl\",\"size\":\"50%\"},on:{\"update:visible\":function($event){_vm.importDrawerVisible=$event}}},[_c('el-row',[_c('el-form',{staticClass:\"el-form--inline\",attrs:{\"inline\":true,\"model\":_vm.jobQueryContent}},[_c('el-form-item',{attrs:{\"label\":\"任务ID\"}},[_c('el-input',{attrs:{\"placeholder\":\"任务ID\"},model:{value:(_vm.jobQueryContent.jobId),callback:function ($$v) {_vm.$set(_vm.jobQueryContent, \"jobId\", $$v)},expression:\"jobQueryContent.jobId\"}})],1),_c('el-form-item',{attrs:{\"label\":\"关键字\"}},[_c('el-input',{attrs:{\"placeholder\":\"关键字\"},model:{value:(_vm.jobQueryContent.keyword),callback:function ($$v) {_vm.$set(_vm.jobQueryContent, \"keyword\", $$v)},expression:\"jobQueryContent.keyword\"}})],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.listJobInfos}},[_vm._v(\"查询\")]),_c('el-button',{attrs:{\"type\":\"cancel\"},on:{\"click\":_vm.onClickReset}},[_vm._v(\"重置\")])],1)],1)],1),_c('el-table',{attrs:{\"data\":_vm.jobInfoPageResult.data}},[_c('el-table-column',{attrs:{\"property\":\"id\",\"label\":\"任务ID\",\"width\":\"80\"}}),_c('el-table-column',{attrs:{\"property\":\"jobName\",\"label\":\"任务名称\",\"width\":\"200\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"300\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"medium\"},on:{\"click\":function($event){return _vm.importNode(scope.row)}}},[_vm._v(\"导入\")])]}}])})],1),_c('el-row',[_c('el-pagination',{attrs:{\"layout\":\"prev, pager, next\",\"total\":this.jobInfoPageResult.totalItems,\"page-size\":this.jobInfoPageResult.pageSize},on:{\"current-change\":_vm.onClickChangePage}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <el-row style=\"margin: 20px\">\n            <el-col :span=\"1\">\n                <el-button type=\"primary\" @click=\"back\">返回</el-button>\n            </el-col>\n            <el-col :span=\"1\" :offset=\"22\">\n                <el-button type=\"success\" @click=\"saveWorkflow\">保存</el-button>\n            </el-col>\n        </el-row>\n\n        <el-row>\n            <el-form ref=\"form\" :model=\"workflowInfo\">\n\n                <el-form-item label=\"工作流名称\">\n                    <el-input v-model=\"workflowInfo.wfName\"/>\n                </el-form-item>\n                <el-form-item label=\"工作流描述\">\n                    <el-input v-model=\"workflowInfo.wfDescription\"/>\n                </el-form-item>\n\n                <el-form-item label=\"定时信息\">\n                    <el-row>\n                        <el-col :span=\"6\">\n                            <el-select v-model=\"workflowInfo.timeExpressionType\" placeholder=\"时间表达式类型\">\n                                <el-option\n                                        v-for=\"item in timeExpressionTypeOptions\"\n                                        :key=\"item.key\"\n                                        :label=\"item.label\"\n                                        :value=\"item.key\">\n                                </el-option>\n                            </el-select>\n                        </el-col>\n                        <el-col :span=\"12\">\n                            <el-input v-model=\"workflowInfo.timeExpression\" placeholder=\"CRON填写CRON表达式，API无需填写\" />\n                        </el-col>\n                    </el-row>\n                </el-form-item>\n\n                <el-form-item label=\"最大实例\">\n                    <el-input-number v-model=\"workflowInfo.maxWfInstanceNum\"/>\n                </el-form-item>\n\n                <el-form-item label=\"报警配置\">\n                    <el-select v-model=\"workflowInfo.notifyUserIds\" multiple filterable placeholder=\"选择报警通知人员\">\n                        <el-option\n                                v-for=\"user in userList\"\n                                :key=\"user.id\"\n                                :label=\"user.username\"\n                                :value=\"user.id\">\n                        </el-option>\n                    </el-select>\n                </el-form-item>\n            </el-form>\n        </el-row>\n\n        <el-row>\n            <el-row>\n                <el-button @click=\"onClickImportNode\">导入任务</el-button>\n                <el-button @click=\"onClickRemoveNode\">删除任务</el-button>\n                <el-button @click=\"onClickAddFrom\">新增起点</el-button>\n                <el-button @click=\"onClickAddTo\">新增终点</el-button>\n                <el-button @click=\"onClickRemoveEdge\">删除边</el-button>\n            </el-row>\n            <div>\n                <svg width=\"80%\" height=1000px id=\"svgCanvas\">\n                    <g />\n                    <rect />\n                </svg>\n            </div>\n        </el-row>\n\n        <!-- 导入选择器 -->\n        <el-drawer\n                title=\"请选择需要导入工作流的任务\"\n                :visible.sync=\"importDrawerVisible\"\n                direction=\"rtl\"\n                size=\"50%\">\n            <el-row>\n                <el-form :inline=\"true\" :model=\"jobQueryContent\" class=\"el-form--inline\">\n                    <el-form-item label=\"任务ID\">\n                        <el-input v-model=\"jobQueryContent.jobId\" placeholder=\"任务ID\"/>\n                    </el-form-item>\n                    <el-form-item label=\"关键字\">\n                        <el-input v-model=\"jobQueryContent.keyword\" placeholder=\"关键字\"/>\n                    </el-form-item>\n                    <el-form-item>\n                        <el-button type=\"primary\" @click=\"listJobInfos\">查询</el-button>\n                        <el-button type=\"cancel\" @click=\"onClickReset\">重置</el-button>\n                    </el-form-item>\n                </el-form>\n            </el-row>\n            <el-table :data=\"jobInfoPageResult.data\">\n                <el-table-column property=\"id\" label=\"任务ID\" width=\"80\"/>\n                <el-table-column property=\"jobName\" label=\"任务名称\" width=\"200\"/>\n                <el-table-column label=\"操作\" width=\"300\">\n                    <template slot-scope=\"scope\">\n                        <el-button size=\"medium\" @click=\"importNode(scope.row)\">导入</el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n\n            <el-row>\n                <el-pagination\n                        layout=\"prev, pager, next\"\n                        :total=\"this.jobInfoPageResult.totalItems\"\n                        :page-size=\"this.jobInfoPageResult.pageSize\"\n                        @current-change=\"onClickChangePage\"/>\n            </el-row>\n        </el-drawer>\n    </div>\n</template>\n\n<script>\n    import dagreD3 from \"dagre-d3\";\n    import * as d3 from \"d3\";\n\n    export default {\n        name: \"WorkflowEditor\",\n        data() {\n            return {\n                workflowInfo: {\n                    appId: this.$store.state.appInfo.id,\n                    enable: true,\n                    maxWfInstanceNum: 1,\n                    notifyUserIds: [],\n                    peworkflowDAG: {\n                        nodes: [],\n                        edges:[]\n                    },\n                    timeExpression: undefined,\n                    timeExpressionType: undefined,\n                    wfDescription: undefined,\n                    wfName: undefined\n                },\n                timeExpressionTypeOptions: [{key: \"API\", label: \"API\"}, {key: \"CRON\", label: \"CRON表达式\"} ],\n                userList: [],\n\n                // 导入任务相关\n                importDrawerVisible: false,\n                jobQueryContent: {\n                    appId: this.$store.state.appInfo.id,\n                    index: 0,\n                    pageSize: 20,\n                    jobId: undefined,\n                    keyword: undefined\n                },\n                jobInfoPageResult: {\n                    pageSize: 20,\n                    totalItems: 0,\n                    data: []\n                },\n\n                // 事件（1：新增起点，2：新增终点，3：删除节点；4：删除边）\n                event: undefined,\n                from: undefined\n            }\n        },\n        methods: {\n            // 返回上一页\n            back: function () {\n                this.$router.go(-1);\n            },\n            /* ******** 导入任务相关，所有函数与 JobManager 重复，需要前端大佬重构！ ******** */\n            // 点击重置按钮\n            onClickReset() {\n                this.jobQueryContent.keyword = undefined;\n                this.jobQueryContent.jobId = undefined;\n            },\n            // 列出符合当前搜索条件的任务\n            listJobInfos() {\n                const that = this;\n                this.axios.post(\"/job/list\", this.jobQueryContent).then((res) => {\n                    that.jobInfoPageResult = res;\n                });\n            },\n            // 点击 换页\n            onClickChangePage(index) {\n                // 后端从0开始，前端从1开始\n                this.jobQueryContent.index = index - 1;\n                this.listJobInfos();\n            },\n            onClickImportNode() {\n                this.listJobInfos();\n                this.importDrawerVisible = true;\n            },\n            // 导入任务，需要去重\n            importNode(data) {\n                let canSave = true;\n                this.workflowInfo.peworkflowDAG.nodes.forEach(node => {\n                   if (data.id === node.jobId) {\n                       canSave = false;\n                       console.log(\"nodes in workflow cannot be duplicated\");\n                   }\n                });\n                if (canSave) {\n                    console.log(\"add node: \" + data.id);\n                    this.workflowInfo.peworkflowDAG.nodes.push({jobId: data.id, jobName: data.jobName});\n                    this.draw();\n                }\n            },\n            // 删除任务\n            onClickRemoveNode() {\n                this.event = 3;\n                this.$message.info(\"请点击需要删除的节点\");\n            },\n            onClickAddFrom() {\n                this.event = 1;\n                this.$message.info(\"请点击起始节点\");\n            },\n            onClickAddTo() {\n                this.event = 2;\n                this.$message.info(\"请点击目标节点\");\n            },\n            onClickRemoveEdge() {\n                this.event = 4;\n                this.$message.info(\"请点击需要删除的边\");\n            },\n            // 保存工作流\n            saveWorkflow() {\n                const that = this;\n                this.axios.post(\"/workflow/save\", this.workflowInfo).then(() => {\n                    that.$message.success(\"保存成功！\");\n                    that.back();\n                });\n            },\n            draw() {\n\n                console.log(\"draw by data: \" + JSON.stringify(this.workflowInfo.peworkflowDAG));\n                //获取D3\n                var g = new dagreD3.graphlib.Graph().setGraph({});\n\n                let nodes = this.workflowInfo.peworkflowDAG.nodes.map(node => {\n                    return {\n                        id: node.jobId,\n                        label: \"jobId: \" + node.jobId + \"\\n\" +\n                                \"jobName: \" + node.jobName\n                    }\n                });\n\n                // 添加节点\n                nodes.forEach(node => {\n                    g.setNode(node.id, node);\n                });\n                // 链接关系\n                this.workflowInfo.peworkflowDAG.edges.forEach(item => {\n                    g.setEdge(item.from, item.to, {\n                        // style: \"stroke-width: 1.5;\"\n                    })\n                });\n                //绘制图形\n                var svg = d3.select(\"svg\"),\n                    inner = svg.select(\"g\");\n\n                //缩放\n                var zoom = d3.zoom().on(\"zoom\", function () {\n                    inner.attr(\"transform\", d3.event.transform);\n                });\n                svg.call(zoom);\n                var render = new dagreD3.render();\n                render(inner, g);\n\n                // 添加节点监听\n                inner.selectAll(\"g.node\").on(\"click\", e => {\n                    for (let i = 0; i < this.workflowInfo.peworkflowDAG.nodes.length; i++) {\n                        if (e == this.workflowInfo.peworkflowDAG.nodes[i].jobId) {\n                            console.log(\"onClickNode, jobId=\" + e);\n                            this.onClickDAGNode(e, g);\n                        }\n                    }\n                });\n                // 添加边监听\n                inner.selectAll(\"path\").on(\"click\", e => {\n                    if (this.event === 4) {\n                        let oldEdges = this.workflowInfo.peworkflowDAG.edges;\n                        this.workflowInfo.peworkflowDAG.edges= [];\n                        // 删除节点相关的所有边\n                        oldEdges.forEach(edge => {\n                            if (!(edge.from === e.v && edge.to === e.w)) {\n                                this.workflowInfo.peworkflowDAG.edges.push(edge);\n                            }\n                            this.draw();\n                        });\n                    }\n                });\n            },\n            onClickDAGNode(nodeId, g) {\n                switch (this.event) {\n                    case 3: {\n                        g.removeNode(nodeId);\n                        let nodesArr = this.workflowInfo.peworkflowDAG.nodes;\n                        let oldEdges = this.workflowInfo.peworkflowDAG.edges;\n                        this.workflowInfo.peworkflowDAG.edges = [];\n                        // 删除节点\n                        nodesArr.splice(nodesArr.findIndex(item => item.jobId == nodeId), 1);\n                        // 删除节点相关的所有边\n                        oldEdges.forEach(edge => {\n                            if (edge.from == nodeId || edge.to == nodeId) {\n                                console.log(\"remove edge: \" + JSON.stringify(edge));\n                            }else {\n                                this.workflowInfo.peworkflowDAG.edges.push(edge);\n                            }\n                        });\n\n                        this.draw();\n                        break;\n                    }\n                    case 1: {\n                        this.from = nodeId;\n                        break;\n                    }\n                    case 2: {\n                        let to = nodeId;\n                        if (this.from === undefined) {\n                            this.$message.warning(\"请先添加起点！\");\n                            break;\n                        }\n                        if (this.from === to) {\n                            this.$message.warning(\"非法操作（起点终点相同）！\");\n                            break;\n                        }\n\n                        let canSave = true;\n                        this.workflowInfo.peworkflowDAG.edges.forEach(edge => {\n                            if (edge.from === this.from && edge.to === to) {\n                                canSave = false;\n                                console.log(\"edge(%o -> %o) already exists!\", this.from, to);\n                            }\n                        });\n\n                        if (canSave) {\n                            this.workflowInfo.peworkflowDAG.edges.push({from: this.from, to: to});\n                            console.log(\"new edge(%o -> %o)\", this.from, to);\n                        }\n                        this.draw();\n                        break;\n                    }\n                }\n            }\n\n\n        },\n        mounted() {\n\n            // 加载用户信息\n            let that = this;\n            that.axios.get(\"/user/list\").then(res => that.userList = res);\n\n            // 读取传递数据，如果是修改，需要先将数据绘制上去\n            let modify = this.$route.params.modify;\n            if (modify) {\n                this.workflowInfo = this.$route.params.workflowInfo;\n                this.workflowInfo.appId = this.$store.state.appInfo.id;\n                // this.workflowInfo.peworkflowDAG.nodes = this.workflowInfo.peworkflowDAG.nodes.map(x => {\n                //     return {\n                //         jobId: x.jobId,\n                //         jobName: x.jobName\n                //     }\n                // });\n                this.draw();\n            }\n        }\n    }\n</script>\n<style scoped>\n    .el-input {\n        width: 80%;\n    }\n    .title{\n        display: inline-block;\n        margin:5px 0;\n        font-size: 16px;\n        font-weight: bold;\n    }\n\n    svg {\n        font-size: 16px;\n    }\n    .node rect {\n        stroke: #606266;\n        fill: #fff;\n    }\n\n    .edgePath path {\n        stroke: #606266;\n        fill: #ff9900;\n        stroke-width: 3px;\n    }\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WorkflowEditor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WorkflowEditor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WorkflowEditor.vue?vue&type=template&id=34dc2e86&scoped=true&\"\nimport script from \"./WorkflowEditor.vue?vue&type=script&lang=js&\"\nexport * from \"./WorkflowEditor.vue?vue&type=script&lang=js&\"\nimport style0 from \"./WorkflowEditor.vue?vue&type=style&index=0&id=34dc2e86&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"34dc2e86\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}